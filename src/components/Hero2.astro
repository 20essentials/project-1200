---
 const nameOfcontainer = `container-2`
 const nameOfContainerRings = 'container-rings-2'
---

<section class={`am-container ${nameOfcontainer}`}>
  <aside class='scene'>
    <section class='wrapper'>
      <article class={nameOfContainerRings}></article>
    </section>
  </aside>
</section>

<style is:global>
  @keyframes move {
    from {
      transform: rotateX(0deg) rotateY(0deg);
    }
    to {
      transform: rotateX(360deg) rotateY(360deg);
    }
  }

  .container-2 {
    .scene {
      width: 100%;
      perspective: 500vmax;
      transform-style: preserve-3d;

      * {
        transform-style: preserve-3d;
      }

      .wrapper {
        width: 100%;
        height: 100%;
        transform: rotateY(0) translateZ(0);

        .container-rings-2 {
          width: 6.52vmax;
          height: 6.52vmax;
          position: relative;
          margin-inline: auto;
          animation: move 9s ease infinite alternate;

          .ring {
            width: 100%;
            height: 100%;
            border: 0.13vmax dotted currentColor;
            position: absolute;
            left: 0;
            top: 0;
            transform-origin: 50% 50%;
          }
        }
      }
    }
  }
</style>

<script>
  import { $ } from '@/utils/functions';
  const $containerRings = $('.container-rings-2') as HTMLElement;
  const NUM_OF_RINGS = 720;
  const fragment = document.createDocumentFragment();
  for (let i = 0; i < NUM_OF_RINGS; i++) {
    const ring = document.createElement('div');
    const currentNum = i / 2;
    ring.classList.add('ring');
    ring.style.color = `hsl(${currentNum},100%,50%)`;
    ring.style.transform = `rotateX(${currentNum}deg) translateY(-13.02vmax)`;
    fragment.appendChild(ring);
  }

  $containerRings.appendChild(fragment);
</script>
